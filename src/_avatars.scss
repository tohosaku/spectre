@use "variables" as var;
@use "variables/color" as color;
@use "variables/border" as border;
@use "mixins/avatar" as avatar;

// Avatars
.avatar {
  @include avatar.avatar-base();
  background: color.$primary-color;
  border-radius: 50%;
  color: rgba(color.$light-color, .85);
  display: inline-block;
  font-weight: 300;
  line-height: 1.25;
  margin: 0;
  position: relative;
  vertical-align: middle;

  &.avatar-xs {
    @include avatar.avatar-base(var.$unit-4);
  }
  &.avatar-sm {
    @include avatar.avatar-base(var.$unit-6);
  }
  &.avatar-lg {
    @include avatar.avatar-base(var.$unit-12);
  }
  &.avatar-xl {
    @include avatar.avatar-base(var.$unit-16);
  }

  img {
    border-radius: 50%;
    height: 100%;
    position: relative;
    width: 100%;
    z-index: var.$zindex-0;
  }

  .avatar-icon,
  .avatar-presence {
    background: color.$bg-color-light;
    bottom: 14.64%;
    height: 50%;
    padding: border.$border-width-lg;
    position: absolute;
    right: 14.64%;
    transform: translate(50%, 50%);
    width: 50%;
    z-index: var.$zindex-0 + 1;
  }

  .avatar-presence {
    background: color.$gray-color;
    box-shadow: 0 0 0 border.$border-width-lg color.$light-color;
    border-radius: 50%;
    height: .5em;
    width: .5em;

    &.online {
      background: color.$success-color;
    }

    &.busy {
      background: color.$error-color;
    }

    &.away {
      background: color.$warning-color;
    }
  }

  &[data-initial]::before {
    color: currentColor;
    content: attr(data-initial);
    left: 50%;
    position: absolute;
    top: 50%;
    transform: translate(-50%, -50%);
    z-index: var.$zindex-0;
  }
}